#!/bin/bash
#
# Simple script to change date and time to generate 
# free Energy, Invest Points and credits in date based games
#  
# Piraveen Kamalathas <https://github.com/piraveen>
# 

MAX=5
REP=1
TODAY=`date +"%m%d%H%M%y"`
YESTERDAY="$TODAY"

## Get yesterday's date
get_yestarday_date () {
    YESTERDAY=`date -v-1d +"%m%d%H%M%y"`
}

## Check if number is integer
is_number () {
	REG='^[0-9]+$'
    NUMBER=$1

    if ! [[ $NUMBER =~ $REG ]]; then
        echo "$NUMBER is not a valid number"
        exit 1
    fi
}

## Usage output
usage () {
    echo "Usage:"
    echo "\t-h | --help : prints this menu => ./generate_credits -h"
    echo "\t-d | --days : max days to move => ./generate_credits -d=10"
    echo "\t-r | --repeat : repeat script  => ./generate_credits -r=3"
    echo "\nExamples:"
    echo "\t./generate_credits"
    echo "\t./generate_credits -d=10 -r=2"
}

## Change day to D-N
change_date () {
	INDEX=0
	while [[ $INDEX -lt $MAX ]]
	do
		get_yestarday_date
		INDEX=$(($INDEX + 1))
		date $YESTERDAY
		sleep 1
	done
}

## Reset date to current
default_date () {
	sleep 1
	date $TODAY
	echo "Date reset to default!"
}

## Parse parameters
parse_args () {
    for ARG in $@
    do
        case $ARG in
            -h|--help)
                usage
                return 2
            ;;
            -d=*|--days=*)
                MAX="${ARG#*=}"
                is_number $MAX
                shift
            ;;
            -r=*|--repeat=*)
                REP="${ARG#*=}"
                is_number $REP
                shift
            ;;
            *)
                echo "$ARG: invalid parameter"
                return 0
            ;;
        esac
    done
    return 1
}

## Repeat script N times
repeat_action () {
    RINDEX=0
	while [[ $RINDEX -lt $REP ]]
	do
		change_date
        RINDEX=$(($RINDEX + 1))
	done	
}

## Check aruguments
check_args () {
    if [[ $# == 0 ]]; then
        return 1
    fi

    parse_args $@

    RET=$?
    return $RET
}

check_args $*

RET=$?

[[ $RET -gt 1 ]] && exit 1;

[[ $RET == 0 ]] && usage && exit 1

repeat_action
default_date
